{"version":3,"file":"static/js/60.68bc752c.chunk.js","mappings":"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","sources":["components/Fetch/FetchApi.jsx","components/RenderMovieList/RenderMovieList.styled.jsx","components/RenderMovieList/RenderMovieList.jsx","components/SerchForm/SerchForm.styled.jsx","components/SerchForm/SerchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { PropTypes } from 'prop-types';\nimport axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst APIKey = '9922346ea7680187f6bd01b1263e365d';\n\nexport const GetTrendingMovie = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`${baseURL}/trending/all/day?api_key=${APIKey}`);\n\n    const movieData = results.map(({ id, poster_path }) => ({\n      id,\n      poster_path,\n    }));\n\n    return { movieData };\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const GetDetails = async id => {\n  try {\n    const respons = await axios.get(\n      `${baseURL}movie/${id}?api_key=${APIKey}&language=en-US`\n    );\n\n    return respons.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const GetSearchMovie = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(\n      `${baseURL}search/movie?api_key=${APIKey}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    return { results };\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}movie/${id}/credits?api_key=${APIKey}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieRewiews = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}movie/${id}/reviews?api_key=${APIKey}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nGetDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nGetSearchMovie.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: centr;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 120px) / 4);\n  padding: ${p => p.theme.space[2]}px;\n  flex-wrap: wrap;\n  object-fit: cover;\n  &:hover,\n  &:focus {\n    box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.16), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      0px 1px 1px rgba(0, 0, 0, 0.12);\n    transform: scale(1.03);\n  }\n`;\n\nexport const ListImage = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, ListImage } from './RenderMovieList.styled';\nimport defaultImage from '../../defaultImage.jpg';\n\nexport const RenderMovieList = ({ results }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {results.map(({ id, poster_path }) => (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ListImage\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : defaultImage\n                }\n                alt=\"\"\n              />\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nRenderMovieList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Wraper = styled.div`\n  //   top: 0;\n  //   left: 0;\n  //   position: sticky;\n  //   z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: ${p => p.theme.space[6]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const FormSerch = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.black};\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: ${p => p.theme.fontSizes.m};\n  border: none;\n\n  outline: none;\n  padding-left: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  &::placeholder {\n    font: inherit;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: ${props => `url(${props.img})`};\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport {\n  Wraper,\n  FormSerch,\n  SearchFormInput,\n  SearchFormButton,\n  ButtonLabel,\n} from './SerchForm.styled';\n\nexport const SerchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const hendalInputChange = event => {\n    setInputValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      return Notiflix.Notify.warning(\n        `Error Image with name ${inputValue} not found!`\n      );\n    }\n\n    onSubmit(inputValue);\n\n    reset();\n  };\n\n  const reset = () => {\n    setInputValue('');\n  };\n\n  return (\n    <div>\n      <Wraper>\n        <FormSerch onSubmit={handleSubmit}>\n          <SearchFormButton\n            type=\"submit\"\n            img={`https://img.icons8.com/windows/72/search-more.png`}\n          >\n            <ButtonLabel>Search</ButtonLabel>\n          </SearchFormButton>\n\n          <SearchFormInput\n            value={inputValue}\n            onChange={hendalInputChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n        </FormSerch>\n      </Wraper>\n    </div>\n  );\n};\nSerchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SerchForm } from 'components/SerchForm/SerchForm';\nimport { GetSearchMovie } from '../components/Fetch/FetchApi';\nimport { RenderMovieList } from 'components/RenderMovieList/RenderMovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    (async () => {\n      const data = await GetSearchMovie(query);\n      const Movie = data.results;\n      setMovies(Movie);\n    })();\n  }, [query]);\n\n  const formSubmitHandler = query => {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams(nextQuery);\n    setMovies([]);\n  };\n\n  return (\n    <div>\n      <SerchForm onSubmit={formSubmitHandler} />\n      {movies?.length > 0 && <RenderMovieList results={movies} />}\n      {movies?.length === 0 && (\n        <p>\n          Sorry, there is no films for your results! Try to find something else!\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["baseURL","APIKey","GetTrendingMovie","axios","results","data","movieData","map","id","poster_path","console","log","GetDetails","respons","GetSearchMovie","query","getMovieCredits","response","getMovieRewiews","propTypes","PropTypes","List","styled","p","theme","space","ListItem","ListImage","RenderMovieList","location","useLocation","to","state","from","src","defaultImage","alt","Wraper","colors","white","FormSerch","black","SearchFormInput","fontSizes","m","s","SearchFormButton","props","img","ButtonLabel","SerchForm","onSubmit","useState","inputValue","setInputValue","reset","event","preventDefault","trim","Notiflix","type","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","Movie","length"],"sourceRoot":""}